digraph G {
    // Graph settings
    rankdir=LR;  // Left to Right direction
    size="28,14";  // Larger width for better horizontal spacing
    dpi=300;
    ratio=fill;
    node [shape=box, style="rounded,filled", fontname="Arial", fontsize=12, margin=0.3];
    edge [fontname="Arial", fontsize=11, penwidth=1.8];
    splines=true;
    
    // Legend
    subgraph cluster_legend {
        label = "Legend";
        fontsize=12;
        fontname="Arial";
        style="rounded";
        color=gray;
        node [margin=0.2, fontsize=10];
        
        main [label="Main Operation", fillcolor="gold1", penwidth=1];
        position [label="Position Movement", fillcolor="skyblue", penwidth=1];
        action [label="Action Step", fillcolor="lightgreen", penwidth=1];
        servo [label="Servo Action", shape="box", style="filled", fillcolor="skyblue", penwidth=1];
        servo_icon [label="", shape="square", style="filled", fillcolor="pink", width=0.2, height=0.2, fixedsize=true];
    }
    
    // Start node
    start [label="1. WAIT FOR SIGNAL\n• System ready and waiting\n• Monitoring for trigger input\n• Cycle begins with signal", fillcolor="gold1"];
    
    // Process nodes with clearer labels and color coding
    move_to_pickup [label="2. MOVE TO PICKUP LOCATION ◼\n• Position arm at pickup location\n• Prepare for pickup sequence", fillcolor="skyblue"];
    
    lower_for_pickup [label="3. LOWER ARM\n• Begin lowering to pickup height\n• Prepare vacuum system", fillcolor="skyblue"];
    
    activate_vacuum [label="4. START SUCTION\n• Activate vacuum\n• Begin gripping object", fillcolor="lightgreen"];
    
    continue_lower [label="5. LOWER COMPLETELY\n• Lower to final pickup position\n• Make contact with object", fillcolor="skyblue"];
    
    wait_pickup [label="6. HOLD BRIEFLY\n• Pause for 300ms\n• Ensure secure grip", fillcolor="lightgreen"];
    
    raise_with_object [label="7. RAISE OBJECT\n• Lift object from surface\n• Prepare for transport", fillcolor="skyblue"];
    
    move_to_dropoff [label="8. TRANSFER TO DROPOFF ◼\n• Move to dropoff location\n• Rotate gripper at midpoint", fillcolor="skyblue"];
    
    lower_for_dropoff [label="9. LOWER AT DROPOFF\n• Lower to release position\n• Prepare to release object", fillcolor="skyblue"];
    
    release_object [label="10. RELEASE OBJECT\n• Turn off suction\n• Drop object at destination", fillcolor="lightgreen"];
    
    wait_after_release [label="11. HOLD BRIEFLY\n• Pause for 100ms\n• Ensure clean release", fillcolor="lightgreen"];
    
    raise_after_dropoff [label="12. RAISE ARM\n• Lift empty gripper\n• Clear the dropoff area", fillcolor="skyblue"];
    
    signal_stage2 [label="13. SIGNAL NEXT MACHINE\n• Send signal to Stage 2\n• Indicate completion", fillcolor="lightgreen"];
    
    return_to_pickup [label="14. RETURN TO START ◼\n• Move back to pickup location\n• Reset for next cycle", fillcolor="skyblue"];
    
    // Edge connections with larger font labels
    start -> move_to_pickup [label="Signal received", fontsize=11];
    move_to_pickup -> lower_for_pickup [label="At pickup location", fontsize=11];
    lower_for_pickup -> activate_vacuum [label="At vacuum height", fontsize=11];
    activate_vacuum -> continue_lower [label="Vacuum on", fontsize=11];
    continue_lower -> wait_pickup [label="Fully lowered", fontsize=11];
    wait_pickup -> raise_with_object [label="Time elapsed", fontsize=11];
    raise_with_object -> move_to_dropoff [label="Fully raised", fontsize=11];
    move_to_dropoff -> lower_for_dropoff [label="At dropoff location", fontsize=11];
    lower_for_dropoff -> release_object [label="At release height", fontsize=11];
    release_object -> wait_after_release [label="Vacuum off", fontsize=11];
    wait_after_release -> raise_after_dropoff [label="Time elapsed", fontsize=11];
    raise_after_dropoff -> signal_stage2 [label="Fully raised", fontsize=11];
    signal_stage2 -> return_to_pickup [label="Signal sent", fontsize=11];
    return_to_pickup -> start [label="Cycle complete", fontsize=11];
    
    // Adjust layout for horizontal flow
    {rank=same; start; return_to_pickup}
} 